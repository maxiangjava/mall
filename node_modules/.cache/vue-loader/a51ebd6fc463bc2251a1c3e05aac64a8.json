{"remainingRequest":"/Users/matthew/WebstormProjects/untitled/demo02/mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/matthew/WebstormProjects/untitled/demo02/mall/src/components/common/tabbar/TabBarItem.vue?vue&type=style&index=0&id=26fa84ce&scoped=true&lang=css&","dependencies":[{"path":"/Users/matthew/WebstormProjects/untitled/demo02/mall/src/components/common/tabbar/TabBarItem.vue","mtime":1599235583193},{"path":"/Users/matthew/WebstormProjects/untitled/demo02/mall/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matthew/WebstormProjects/untitled/demo02/mall/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/matthew/WebstormProjects/untitled/demo02/mall/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/matthew/WebstormProjects/untitled/demo02/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matthew/WebstormProjects/untitled/demo02/mall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50YWItYmFyLWl0ZW17CiAgZmxleDogMTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgaGVpZ2h0OiA0OXB4OwogIGZvbnQtc2l6ZTogMTRweDsKfQoKLnRhYi1iYXItaXRlbSBpbWd7CiAgd2lkdGg6IDI0cHg7CiAgaGVpZ2h0OiAyNHB4OwogIG1hcmdpbi10b3A6IDNweDsKfQoK"},{"version":3,"sources":["TabBarItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"TabBarItem.vue","sourceRoot":"src/components/common/tabbar","sourcesContent":["<template>\n  <div class=\"tab-bar-item\" @click=\"itemClick\">\n    <div v-if=\"!isActive\">\n      <slot  name=\"item-icon\"></slot>\n    </div>\n    <div v-else>\n      <slot name=\"item-icon-active\"></slot>\n    </div>\n    <div :style=\"activeStyle\" >\n      <slot name=\"item-text\"></slot>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: \"TabBarItem\",\n    props:{\n      path: String,\n      activeColor: {\n        type:String,\n        default: 'red'\n      }\n    },\n    data(){\n      return {\n\n      }\n    },\n    computed:{\n      isActive(){\n        return this.$route.path.indexOf(this.path) !== -1\n      },\n      activeStyle(){\n        return this.isActive ? {color: this.activeColor} : {}\n      }\n    },\n    methods:{\n      itemClick(){\n        this.$router.replace(this.path).catch(err => err)\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .tab-bar-item{\n    flex: 1;\n    text-align: center;\n    height: 49px;\n    font-size: 14px;\n  }\n\n  .tab-bar-item img{\n    width: 24px;\n    height: 24px;\n    margin-top: 3px;\n  }\n\n</style>"]}]}